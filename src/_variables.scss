
$blip1-color: #35d440;
$blip2-color: #1086ff;
$blip3-color: #e72944;


$page-bg-color: transparent;

//== Media queries breakpoints
//
//## Define the breakpoints at which your layout will change, adapting to different screen sizes.

// Extra small screen / phone
//** Deprecated `$screen-xs-min` as of v3.2.0
$screen-xs-min: 480px !default;

// Small screen / tablet
$screen-sm-min: 768px !default;

// Medium screen / desktop
$screen-md-min: 992px !default;

// Large screen / wide desktop
$screen-lg-min: 1200px !default;

// So media queries don't overlap when required, provide a maximum
$screen-xs-max: ($screen-sm-min - 1) !default;
$screen-sm-max: ($screen-md-min - 1) !default;
$screen-md-max: ($screen-lg-min - 1) !default;


//== Grid system
//
//## Define your custom responsive grid.

//** Number of columns in the grid.
$grid-columns: 12 !default;
//** Padding between columns. Gets divided in half for the left and right.
$grid-gutter-width: 30px !default;
// Navbar collapse
//** Point at which the navbar becomes uncollapsed.
$grid-float-breakpoint: $screen-sm-min !default;
//** Point at which the navbar begins collapsing.
$grid-float-breakpoint-max: ($grid-float-breakpoint - 1) !default;


//== Container sizes
//
//## Define the maximum width of `.container` for different screen sizes.

// Small screen / tablet
$container-tablet: (720px + $grid-gutter-width) !default;
//** For `$screen-sm-min` and up.
$container-sm: $container-tablet !default;

// Medium screen / desktop
$container-desktop: (940px + $grid-gutter-width) !default;
//** For `$screen-md-min` and up.
$container-md: $container-desktop !default;

// Large screen / wide desktop
$container-large-desktop: (1140px + $grid-gutter-width - 70px) !default;
//** For `$screen-lg-min` and up.
$container-lg: $container-large-desktop !default;





// toggle menu at
$menu-toggle: $screen-md-max;
$menu-color: #000;
$menu-bg-color: #999;

$zindex-menu-base: 5000;

$menu-min-width: var(--cvbn-menu-width, 70px);
$menu-gutter: 1em;
$menu-footer-height: 4em;
$menu-toggle: $screen-md-max !default;
$menu-toSmallForMenuOnLandscape: $screen-xs-min !default;

$menu-mediaQuery: "only screen and (min-width: #{$menu-toggle}), only screen and (max-height: #{$menu-toSmallForMenuOnLandscape}) and (orientation: landscape)";




//
// Progress bars
// --------------------------------------------------
$line-height-computed: 30px !default;
$progress-bg: #f5f5f5 !default;
$border-radius-base: 4px;
$font-size-small: 16px;
$progress-bar-color: #fff !default;
$progress-bar-bg: #428bca;
$gray-light: #777;



// ********* Mix in's *********
// ****************************
@mixin sr-only() {
    position: absolute;
    left: -10000px;
    top: auto;
    width: 1px;
    height: 1px;
    overflow: hidden;
}

// Clearfix
//
// For modern browsers
// 1. The space content is one way to avoid an Opera bug when the
//    contenteditable attribute is included anywhere else in the document.
//    Otherwise it causes space to appear at the top and bottom of elements
//    that are clearfixed.
// 2. The use of `table` rather than `block` is only necessary if using
//    `:before` to contain the top-margins of child elements.
//
// Source: http://nicolasgallagher.com/micro-clearfix-hack/

@mixin clearfix() {
    &:before,
    &:after {
        content: " "; // 1
        display: table; // 2
    }

    &:after {
        clear: both;
    }
}



// Centered container element
@mixin container-fixed($gutter: $grid-gutter-width) {
    margin-right: auto;
    margin-left: auto;
    padding-left: ($gutter / 2);
    padding-right: ($gutter / 2);
    @include clearfix;
}

//styles the tags
@mixin colorTag($bg, $bg-hover, $color, $color-hover) {
    a {
        background: $bg;
        color: $color;

        &:before {
            border-color: transparent $bg transparent transparent;
        }

        &:hover {
            background: $bg-hover;
            color: $color-hover;

            &:before {
                border-color: transparent $bg-hover transparent transparent;
            }
        }
    }
}
// sets the color for the little 'dot'
@mixin colorTag-SetDOTColor($bg) {
    ul.project-tags a:after {
        background-color: $bg;
    }
}
